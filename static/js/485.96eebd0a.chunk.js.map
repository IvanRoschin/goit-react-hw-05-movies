{"version":3,"file":"static/js/485.96eebd0a.chunk.js","mappings":"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","sources":["components/FilmGallery/FilmGallery.styled.jsx","components/FilmGallery/FilmGallery.jsx","components/api/constants/apiKeys.js","components/api/api.jsx","components/api/constants/baseUrls.js","pages/Home/Home.styled.jsx","pages/Home/Home.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const FilmContainer = styled.ul`\n  margin: ${p => p.theme.space[5]}px;\n  display: flex;\n  flex-wrap: wrap;\n  gap: 16px;\n  justify-content: center;\n  list-style: none;\n`;\n\nexport const FilmLi = styled.li`\n  cursor: pointer;\n  margin-bottom: ${p => p.theme.space[3]}px;\n  transition: ${p => p.theme.transition.filmlist};\n  &:hover {\n    transform: scale(1.03) translateZ(0);\n    transition: ${p => p.theme.transition.filmlist};\n  }\n`;\n\nexport const FilmPoster = styled.img`\n  border-radius: inherit;\n  box-shadow: 0px 3px 4px 1px rgba(44, 133, 200, 0.2);\n  height: 400px;\n  max-width: 280px;\n`;\n\nexport const FilmTitle = styled.h2`\n  font-size: 16px;\n  font-weight: 700;\n  max-width: 300px;\n  text-align: center;\n  color: ${p => p.theme.colors.black}; ;\n`;\n","import PropTypes from 'prop-types';\nimport { BASE_POSTER_URL } from 'components/api/constants/baseUrls';\nimport { IMG_W500 } from 'components/api/constants/baseUrls';\nimport { Link } from 'react-router-dom';\nimport {\n  FilmContainer,\n  FilmLi,\n  FilmPoster,\n  FilmTitle,\n} from './FilmGallery.styled';\n\nexport const FilmGallery = ({ films, location }) => {\n  return (\n    <FilmContainer>\n      {films.map(({ id, title, name, poster_path }) => {\n        let imagePath = ``;\n        !poster_path\n          ? (imagePath = `https://raw.githubusercontent.com/marvall/filmoteka/main/src/images/no-poster.png`)\n          : (imagePath = `${BASE_POSTER_URL}/${IMG_W500}/${poster_path}`);\n        return (\n          <FilmLi key={id}>\n            <Link to={`/movies/${id}`} state={{ from: location }}>\n              <FilmPoster\n                data-id={id}\n                src={imagePath}\n                alt={title || name}\n                loading=\"lazy\"\n              />\n              <FilmTitle>{title || name}</FilmTitle>\n            </Link>\n          </FilmLi>\n        );\n      })}\n    </FilmContainer>\n  );\n};\n\nFilmGallery.propTypes = {\n  films: PropTypes.array.isRequired,\n  location: PropTypes.string,\n};\n","const API_KEY = '7b857fa55c7b70b9ad8d603bfe522c1c';\n\nexport default API_KEY;\n","import axios from 'axios';\n\nimport API_KEY from './constants/apiKeys';\nimport { BASE_TRENDING_MOVIES_URL } from './constants/baseUrls';\n\naxios.defaults.baseURL = BASE_TRENDING_MOVIES_URL;\n\n// FETCH FILMS FOR THE FIRST TIME\nexport const getTrending = async (page = 1) => {\n  const response = await axios.get(\n    `/trending/movie/day?api_key=${API_KEY}&page=${page}`\n  );\n  return response.data;\n};\n\n// FETCH FILMS BY ID\nexport const getFilmById = async id => {\n  const { data } = await axios.get(`/movie/${id}?api_key=${API_KEY}`);\n  return data;\n};\n\n// FETCH FILMS USING FORM\nexport const getSearchMovie = async (query, page) => {\n  const { data } = await axios.get(\n    `/search/movie?api_key=${API_KEY}&language=en-US&query=${query}&page=${page}`\n  );\n  if (data.total_results === 0) {\n    return Promise.reject(new Error(`Ooops! No images with ${query}`));\n  } else {\n    return data;\n  }\n};\n\n// FETCH CAST\nexport const getMovieCast = async id => {\n  const response = await axios.get(`/movie/${id}/credits?api_key=${API_KEY}`);\n  if (response.data.cast.length === 0) {\n    return Promise.reject(new Error(`No cast was found.`));\n  } else {\n    return response.data.cast;\n  }\n};\n\n// FETCH REVIEWS\nexport const getMovieReviews = async id => {\n  const response = await axios.get(`/movie/${id}/reviews?api_key=${API_KEY}`);\n  if (response.data.total_results === 0) {\n    return Promise.reject(new Error(`No reviews was found.`));\n  } else {\n    return response.data.results;\n  }\n};\n","const BASE_TRENDING_MOVIES_URL = 'https://api.themoviedb.org/3';\n\nconst BASE_GENRE_URL = 'https://api.themoviedb.org/3/genre/movie/list?';\n\nconst BASE_POSTER_URL = 'https://image.tmdb.org/t/p';\n\nexport { BASE_TRENDING_MOVIES_URL, BASE_POSTER_URL, BASE_GENRE_URL };\n\nexport const IMG_W500 = `/w500`;\nexport const IMG_W400 = `/w400`;\nexport const IMG_W300 = `/w300`;\nexport const IMG_W200 = `/w200`;\nexport const IMG_W100 = `/w100`;\nexport const IMG_ORIG = `/original`;\n","import styled from 'styled-components';\n\nexport const Title = styled.h1`\n  display: flex;\n  justify-content: center;\n`;\n","import { getTrending } from '../../components/api/api';\nimport { FilmGallery } from '../../components/FilmGallery/FilmGallery';\nimport { useState, useEffect } from 'react';\nimport { Title } from './Home.styled';\n\nconst Home = () => {\n  const [films, SetFilms] = useState([]);\n\n  useEffect(() => {\n    async function getFilms() {\n      try {\n        const data = await getTrending();\n        SetFilms(data.results);\n      } catch (error) {\n        console.log(error);\n      }\n    }\n    getFilms();\n  }, []);\n\n  return (\n    <>\n      <Title>Trending today</Title>\n      <FilmGallery films={films} />\n    </>\n  );\n};\n\nexport default Home;\n"],"names":["FilmContainer","styled","p","theme","space","FilmLi","transition","filmlist","FilmPoster","FilmTitle","colors","black","FilmGallery","films","location","map","id","title","name","poster_path","imagePath","BASE_POSTER_URL","IMG_W500","to","state","from","src","alt","loading","axios","BASE_TRENDING_MOVIES_URL","getTrending","page","API_KEY","response","data","getFilmById","getSearchMovie","query","total_results","Promise","reject","Error","getMovieCast","cast","length","getMovieReviews","results","IMG_W300","IMG_W200","Title","useState","SetFilms","useEffect","console","log","getFilms"],"sourceRoot":""}