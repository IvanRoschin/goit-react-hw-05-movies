{"version":3,"file":"static/js/725.235a98d3.chunk.js","mappings":"0OAGaA,GAAUC,EAAAA,EAAAA,IAAOC,EAAAA,GAAPD,CAAH,2bACH,SAAAE,GAAC,OAAIA,EAAEC,MAAMC,MAAMC,IAAlB,IACH,SAAAH,GAAC,OAAIA,EAAEC,MAAMG,UAAUC,EAAtB,IACC,SAAAL,GAAC,OAAIA,EAAEC,MAAMK,YAAYC,IAAxB,IAGT,SAAAP,GAAC,OAAIA,EAAEC,MAAMO,MAAM,EAAlB,IACG,SAAAR,GAAC,OAAIA,EAAEC,MAAMO,MAAM,EAAlB,IACK,SAAAR,GAAC,OAAIA,EAAEC,MAAMQ,MAAMC,KAAlB,IAET,SAAAV,GAAC,OAAIA,EAAEC,MAAMU,OAAOC,KAAnB,IACI,SAAAZ,GAAC,OAAIA,EAAEC,MAAMY,WAAWC,IAAvB,IAGU,SAAAd,GAAC,OAAIA,EAAEC,MAAMU,OAAOI,OAAnB,IACf,SAAAf,GAAC,OAAIA,EAAEC,MAAMU,OAAOK,GAAnB,IACO,SAAAhB,GAAC,OAAIA,EAAEC,MAAMgB,QAAQC,MAApB,IACF,SAAAlB,GAAC,OAAIA,EAAEC,MAAMU,OAAOK,GAAnB,IAKR,SAAAhB,GAAC,OAAIA,EAAEC,MAAMU,OAAOK,GAAnB,I,UCzBRG,EAAK,CACTC,MAAO,CACL,CACEC,GAAI,MACJC,MAAO,aACPC,KAAM,kBACNC,YAAa,OAEf,CACEH,GAAI,MACJE,KAAM,mBACNC,YAAa,OAEf,CACEH,GAAI,MACJE,KAAM,kBACNC,YAAa,S,SCXbC,EAAW,CACf,CAAEC,KAAM,uBAAwBC,KAAM,QACtC,CAAED,KAAM,0BAA2BC,KAAM,YAmC3C,EAhCqB,WACnB,IAAQC,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAAsCE,EAAAA,EAAAA,UAAS,CAAC,GAAhD,eAAOC,EAAP,KAAoBC,EAApB,KAEQT,EAA6BQ,EAA7BR,KAAMD,EAAuBS,EAAvBT,MAAOE,EAAgBO,EAAhBP,YAQrB,OANAS,EAAAA,EAAAA,YAAU,WDMHC,QAAQC,QAAQhB,EAAGC,OCLNgB,KAAKJ,EACxB,GAAE,CAACJ,IAEJS,QAAQC,IAAIf,IAGV,iCACE,0DACA,4BACE,yBAAMA,GAAQD,KACd,yBAAME,QAGR,yBACGC,EAASc,KAAI,gBAAGb,EAAH,EAAGA,KAAMC,EAAT,EAASA,KAAT,OACZ,SAAC9B,EAAD,CAAS2C,GAAId,EAAb,SACGC,GADqBD,EADZ,OAMhB,SAAC,KAAD,MAGL,C","sources":["pages/MovieDetails/MovieDetails.styled.jsx","fakeApi.js","pages/MovieDetails/MovieDetails.jsx"],"sourcesContent":["import styled from 'styled-components';\nimport { NavLink } from 'react-router-dom';\n\nexport const NavItem = styled(NavLink)`\n  font-family: ${p => p.theme.fonts.body};\n  font-size: ${p => p.theme.fontSizes.ml};\n  font-weight: ${p => p.theme.fontWeights.bold};\n  display: flex;\n  aling-items: center;\n  gap: ${p => p.theme.space[3]}px;\n  padding: ${p => p.theme.space[3]}px;\n  border-radius: ${p => p.theme.radii.small};\n  text-decoration: none;\n  color: ${p => p.theme.colors.black};\n  transition: ${p => p.theme.transition.main};\n\n  &.active {\n    // background-color: ${p => p.theme.colors.primary};\n    color: ${p => p.theme.colors.red};\n    border-bottom: ${p => p.theme.borders.normal};\n    border-color: ${p => p.theme.colors.red};\n  }\n\n  :hover:not(.active),\n  focus-visible:not(.active) {\n    color: ${p => p.theme.colors.red};\n  }\n`;\n","const db = {\n  films: [\n    {\n      id: '123',\n      title: 'first film',\n      name: 'alia first film',\n      poster_path: '123',\n    },\n    {\n      id: '456',\n      name: 'alia second film',\n      poster_path: '456',\n    },\n    {\n      id: '789',\n      name: 'alia third film',\n      poster_path: '789',\n    },\n  ],\n};\n\nexport const getFilms = () => {\n  return Promise.resolve(db.films);\n};\n\nexport const getFilmsById = filmId => {\n  return Promise.resolve(db.films.find(film => film.id === filmId));\n};\n","import { Outlet, useParams } from 'react-router-dom';\nimport { NavItem } from './MovieDetails.styled';\nimport { useState, useEffect } from 'react';\nimport { getFilms } from 'fakeApi';\n\nconst navItems = [\n  { href: 'movies/:movieId/cast', text: 'Cast' },\n  { href: 'movies/:movieId/reviews', text: 'Reviews' },\n];\n\nconst MovieDetails = () => {\n  const { movieId } = useParams();\n  const [filmDetails, setFilmDetails] = useState({});\n  // const [filmGenre, setFilmGenre] = useState([]);\n  const { name, title, poster_path } = filmDetails;\n\n  useEffect(() => {\n    getFilms(movieId).then(setFilmDetails);\n  }, [movieId]);\n\n  console.log(name);\n\n  return (\n    <>\n      <div>MovieDetails must been here</div>\n      <div>\n        <div>{name || title}</div>\n        <div>{poster_path}</div>\n      </div>\n\n      <nav>\n        {navItems.map(({ href, text }) => (\n          <NavItem to={href} key={href}>\n            {text}\n          </NavItem>\n        ))}\n      </nav>\n      <Outlet />\n    </>\n  );\n};\n\nexport default MovieDetails;\n\n// import { useState, useEffect } from 'react';\n// import { getFilmById } from '../../components/api/api';\n// import { Navlink, Outlet } from 'react-router-dom';\n\n// const navItems = [{href: }];\n\n// const MovieDetails = () => {\n//   const [filmDetails, setFilmDetail] = useState([]);\n//   const [filmGenres, setFilmGenres] = useState([]);\n//   const { poster_path, title, vote_average, overview, release_date } = filmInfo;\n//   const releaseYear = new Date(release_date).getFullYear();\n\n//   useEffect(() => {\n//     async function getFilms() {\n//       try {\n//         const filmDetails = await getFilmById(id);\n//         setFilmDetail(prevState => [...prevState, ...filmDetails]);\n//       } catch (error) {\n//         console.log(error);\n//       }\n//     }\n//     getFilms();\n//   }, [id]);\n//   console.log('filmDetails', filmDetails);\n//   return (\n//     <>\n//       <div>Films Detail must been here</div>\n//     </>\n//   );\n// };\n\n// export default MovieDetails;\n"],"names":["NavItem","styled","NavLink","p","theme","fonts","body","fontSizes","ml","fontWeights","bold","space","radii","small","colors","black","transition","main","primary","red","borders","normal","db","films","id","title","name","poster_path","navItems","href","text","movieId","useParams","useState","filmDetails","setFilmDetails","useEffect","Promise","resolve","then","console","log","map","to"],"sourceRoot":""}