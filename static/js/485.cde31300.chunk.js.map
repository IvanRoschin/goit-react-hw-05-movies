{"version":3,"file":"static/js/485.cde31300.chunk.js","mappings":"gNAEaA,EAAgBC,EAAAA,GAAAA,GAAH,+IACd,SAAAC,GAAC,OAAIA,EAAEC,MAAMC,MAAM,EAAlB,IAQAC,EAASJ,EAAAA,GAAAA,GAAH,4KAEA,SAAAC,GAAC,OAAIA,EAAEC,MAAMC,MAAM,EAAlB,IACJ,SAAAF,GAAC,OAAIA,EAAEC,MAAMG,WAAWC,QAAvB,IAGC,SAAAL,GAAC,OAAIA,EAAEC,MAAMG,WAAWC,QAAvB,IAINC,EAAaP,EAAAA,GAAAA,IAAH,kJAOVQ,EAAYR,EAAAA,GAAAA,GAAH,sF,SCjBTS,EAAc,SAAC,GAAe,IAAbC,EAAY,EAAZA,MAE5B,OADAC,QAAQC,IAAIF,IAEV,SAACX,EAAD,UACGW,EAAMG,KAAI,YAAuC,IAApCC,EAAmC,EAAnCA,GAAIC,EAA+B,EAA/BA,MAAOC,EAAwB,EAAxBA,KAAMC,EAAkB,EAAlBA,YACzBC,EAAS,GAIb,OADKA,EAFJD,EAEa,UAVM,kCAUN,YAAyBA,GADzB,qFAGZ,SAACb,EAAD,WACE,UAAC,KAAD,CAAMe,GAAE,kBAAaL,GAArB,WACE,SAACP,EAAD,CACE,UAASO,EACTM,IAAKF,EACLG,IAAKN,GAASC,EACdM,QAAQ,UAEV,SAACd,EAAD,UAAYO,GAASC,QARZF,EAYhB,KAGN,C,oIClCD,EAFgB,mCCKhBS,IAAAA,SAAAA,QCLiC,+BDQ1B,IAAMC,EAAW,mCAAG,yGAAOC,EAAP,+BAAc,EAAd,SACFF,IAAAA,IAAA,sCACUG,EADV,iBAC0BD,IAFxB,cACnBE,EADmB,yBAIlBA,EAASC,MAJS,2CAAH,qDAcXC,EAAc,mCAAG,WAAMC,GAAN,yFACLP,IAAAA,IAAA,gCACIG,EADJ,iCACoCI,IAF/B,uBACpBF,EADoB,EACpBA,KADoB,kBAIrBA,GAJqB,2CAAH,qD,0HEpBdG,E,QAAQ/B,GAAAA,GAAH,sE,SCyBlB,EArBa,WACX,OAA0BgC,EAAAA,EAAAA,UAAS,IAAnC,eAAOtB,EAAP,KAAcuB,EAAd,KAUA,OARAC,EAAAA,EAAAA,YAAU,WACR,KACEV,EAAAA,EAAAA,MAAcW,MAAK,SAAAC,GAAC,OAAIH,EAASG,EAAEC,QAAf,GAGrB,CAFC,MAAOC,GACP3B,QAAQC,IAAI0B,EACb,CACF,GAAE,KAGD,iCACE,SAACP,EAAD,8BACA,SAACtB,EAAA,EAAD,CAAaC,MAAOA,MAKzB,C","sources":["components/FilmGallery/FilmGallery.styled.jsx","components/FilmGallery/FilmGallery.jsx","components/api/constants/apiKeys.js","components/api/api.jsx","components/api/constants/baseUrls.js","pages/Home/Home.styled.jsx","pages/Home/Home.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const FilmContainer = styled.ul`\n  margin: ${p => p.theme.space[5]}px;\n  display: flex;\n  flex-wrap: wrap;\n  gap: 16px;\n  justify-content: center;\n  list-style: none;\n`;\n\nexport const FilmLi = styled.li`\n  cursor: pointer;\n  margin-bottom: ${p => p.theme.space[3]}px;\n  transition: ${p => p.theme.transition.filmlist};\n  &:hover {\n    transform: scale(1.03) translateZ(0);\n    transition: ${p => p.theme.transition.filmlist};\n  }\n`;\n\nexport const FilmPoster = styled.img`\n  border-radius: inherit;\n  box-shadow: 0px 3px 4px 1px rgba(44, 133, 200, 0.2);\n  height: 400px;\n  max-width: 280px;\n`;\n\nexport const FilmTitle = styled.h2`\n  font-size: 16px;\n  font-weight: 700;\n  max-width: 300px;\n`;\n","// import PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport {\n  FilmContainer,\n  FilmLi,\n  FilmPoster,\n  FilmTitle,\n} from './FilmGallery.styled';\n\nexport const BASE_POSTER_URL = `https://image.tmdb.org/t/p/w500`;\n\nexport const FilmGallery = ({ films }) => {\n  console.log(films);\n  return (\n    <FilmContainer>\n      {films.map(({ id, title, name, poster_path }) => {\n        let imagePath = ``;\n        !poster_path\n          ? (imagePath = `https://raw.githubusercontent.com/marvall/filmoteka/main/src/images/no-poster.png`)\n          : (imagePath = `${BASE_POSTER_URL}/${poster_path}`);\n        return (\n          <FilmLi key={id}>\n            <Link to={`/movies/${id}`}>\n              <FilmPoster\n                data-id={id}\n                src={imagePath}\n                alt={title || name}\n                loading=\"lazy\"\n              />\n              <FilmTitle>{title || name}</FilmTitle>\n            </Link>\n          </FilmLi>\n        );\n      })}\n    </FilmContainer>\n  );\n};\n\n// FilmGallery.propTypes = {\n//   films: PropTypes.array.isRequired,\n// };\n","const API_KEY = '7b857fa55c7b70b9ad8d603bfe522c1c';\n\nexport default API_KEY;\n","import axios from 'axios';\n\nimport API_KEY from './constants/apiKeys';\nimport { BASE_TRENDING_MOVIES_URL } from './constants/baseUrls';\n\naxios.defaults.baseURL = BASE_TRENDING_MOVIES_URL;\n\n// FETCH FILMS FOR THE FIRST TIME\nexport const getTrending = async (page = 1) => {\n  const response = await axios.get(\n    `/trending/movie/day?api_key=${API_KEY}&page=${page}`\n  );\n  return response.data;\n};\n\n// FETCH FILMS BY ID\nexport const getFilmById = async id => {\n  const { data } = await axios.get(`/movie/${id}?api_key=${API_KEY}`);\n  return data;\n};\n\n// FETCH FILMS USING FORM\nexport const getSearchMovie = async query => {\n  const { data } = await axios.get(\n    `/search/movie?api_key=${API_KEY}&language=en-US&query=${query}`\n  );\n  return data;\n};\n\n// FETCH CAST\nexport const getMovieCast = async id => {\n  const { data } = await axios.get(`/movie/${id}/credits?api_key=${API_KEY}`);\n  return data;\n};\n\n// FETCH REVIEWS\nexport const getMovieReviews = async id => {\n  const { data } = await axios.get(`/movie/${id}/reviews?api_key=${API_KEY}`);\n  return data;\n};\n","const BASE_TRENDING_MOVIES_URL = 'https://api.themoviedb.org/3';\n\nconst BASE_GENRE_URL = 'https://api.themoviedb.org/3/genre/movie/list?';\n\nconst BASE_POSTER_URL = 'https://image.tmdb.org/t/p';\n\nexport { BASE_TRENDING_MOVIES_URL, BASE_POSTER_URL, BASE_GENRE_URL };\n\nexport const IMG_W500 = `/w500`;\nexport const IMG_W400 = `/w400`;\nexport const IMG_W300 = `/w300`;\nexport const IMG_W200 = `/w200`;\nexport const IMG_W100 = `/w100`;\nexport const IMG_ORIG = `/original`;\n","import styled from 'styled-components';\n\nexport const Title = styled.h1`\n  display: flex;\n  justify-content: center;\n`;\n","import { getTrending } from '../../components/api/api';\n// import { FilmList } from '../../components/FilmsList/FilmsList';\nimport { FilmGallery } from '../../components/FilmGallery/FilmGallery';\nimport { useState, useEffect } from 'react';\nimport { Title } from './Home.styled';\n\nconst Home = () => {\n  const [films, SetFilms] = useState([]);\n\n  useEffect(() => {\n    try {\n      getTrending().then(r => SetFilms(r.results));\n    } catch (error) {\n      console.log(error);\n    }\n  }, []);\n\n  return (\n    <>\n      <Title>Trending today</Title>\n      <FilmGallery films={films} />\n\n      {/* <FilmList trendingFilms={trendingFilms}> </FilmList> */}\n    </>\n  );\n};\n\nexport default Home;\n"],"names":["FilmContainer","styled","p","theme","space","FilmLi","transition","filmlist","FilmPoster","FilmTitle","FilmGallery","films","console","log","map","id","title","name","poster_path","imagePath","to","src","alt","loading","axios","getTrending","page","API_KEY","response","data","getSearchMovie","query","Title","useState","SetFilms","useEffect","then","r","results","error"],"sourceRoot":""}